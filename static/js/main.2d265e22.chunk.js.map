{"version":3,"sources":["GlobalStyle.js","API.js","components/Grid/Grid.styles.js","components/Grid/index.js","assets/logo.svg","assets/search.svg","components/Header/Header.styles.js","components/Header/index.jsx","components/List/List.styles.js","components/Rating/index.js","components/PlaceDetails/PlaceDetails.styles.js","components/PlaceDetails/index.jsx","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/List/index.jsx","components/Map/Map.styles.js","components/Map/index.jsx","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","apiSettings","getPlacesData","type","sw","ne","a","axios","get","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","limit","headers","process","data","console","log","getWeatherData","Wrapper","styled","div","Grid","children","Content","Search","LogoImg","img","Header","setCoordinates","useState","autocomplete","setAutoComplete","src","TALogo","onLoad","autoC","onPlaceChanged","getPlace","geometry","location","className","SearchIcon","alt","placeholder","FormControl","Rating","num","rating","stars","i","push","icon","fasStar","color","size","faStarHalfAlt","farStar","Card","Media","props","image","PlaceDetails","place","id","name","address","ranking","photo","price_level","awards","cuisine","phone","web_url","website","num_reviews","business_listings","hotel_url","mobile_contacts","value","undefined","images","medium","url","faPhoneAlt","faMapMarkerAlt","split","splice","join","href","target","rel","map","award","style","paddingBottom","small","display_name","key","Spinner","List","places","isLoading","setType","setRating","htmlFor","onChange","e","Preview","Map","setBounds","coordinates","bootstrapURLKeys","defaultCenter","center","defaultZoom","margin","options","marginBounds","onChildClick","longitude","latitude","App","setPlaces","bounds","setIsLoading","filteredPlaces","setFilteredPlaces","useEffect","navigator","geolocation","getCurrentPosition","coords","filtered","filter","API","then","Number","getPlaces","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d265e22.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n        --headerHeight: 3.5rem;\n\n\n        --clr-grey: hsl(210, 36%, 96%);\n    }\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n        padding: 0;\n        margin: 0;\n    }\n\n    #root {\n    }\n\n    body {\n        max-height: 100vh;\n        width: 100vw;\n        margin: 0;\n        padding: 0;\n        scroll-behavior: smooth;\n\n        color: #fff;\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n        }\n\n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1rem;\n            margin: 0;\n        }\n    }\n`;\n","import axios from 'axios';\n\nconst apiSettings = {\n  getPlacesData: async (type, sw, ne) => {\n    try {\n      const {\n        data: { data },\n      } = await axios.get(\n        `https://travel-advisor.p.rapidapi.com/${type}/list-in-boundary`,\n        {\n          params: {\n            bl_latitude: sw.lat,\n            tr_latitude: ne.lat,\n            bl_longitude: sw.lng,\n            tr_longitude: ne.lng,\n            limit: '30',\n          },\n          headers: {\n            'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n          },\n        }\n      );\n\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getWeatherData: async () => {},\n};\n\nexport default apiSettings;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100vw;\n  height: calc(100vh - var(--headerHeight));\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 2.5fr;\n  align-items: center;\n`;\n","import React from 'react';\n\n// Syles\nimport { Wrapper } from './Grid.styles';\n\nconst Grid = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Grid;\n","export default __webpack_public_path__ + \"static/media/logo.9e44543b.svg\";","export default __webpack_public_path__ + \"static/media/search.53e39e37.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0px 50px;\n  width: 100%;\n  position: sticky;\n  height: var(--headerHeight);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n  align-content: center;\n  justify-content: space-between;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nexport const Search = styled.div`\n  display: flex;\n  column-gap: 1.5rem;\n  align-items: center;\n\n  h3 {\n    font-weight: 400;\n    font-size: 1.3rem;\n    white-space: nowrap;\n  }\n\n  .search-container {\n    padding: 3px 1rem;\n    background-color: rgba(255, 255, 255, 0.15);\n    display: flex;\n    border-radius: 5px;\n    cursor: text;\n\n    input {\n      background: none;\n      --webkit-tap-highlight-color: transparent;\n      border: 0;\n      padding: 5px;\n      padding-left: 16px;\n      cursor: text;\n      outline: none;\n      font-size: 1rem;\n      font-weight: 300;\n      color: white;\n\n      ::placeholder {\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  .search-icon {\n    width: 20px;\n    transition: all 0.3s;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  width: 230px;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 760px) {\n    width: 175px;\n  }\n`;\n","import React, { useState } from 'react';\n\n// Google map react component\nimport { Autocomplete } from '@react-google-maps/api';\n\n// Svg logos\nimport TALogo from '../../assets/logo.svg';\nimport SearchIcon from '../../assets/search.svg';\n\n// Syles\nimport { Wrapper, Content, LogoImg, Search } from './Header.styles';\n\nconst Header = ({ setCoordinates }) => {\n  const [autocomplete, setAutoComplete] = useState(null);\n  const onLoad = (autoC) => setAutoComplete(autoC);\n\n  const onPlaceChanged = () => {\n    const lat = autocomplete.getPlace().geometry.location.lat();\n    const lng = autocomplete.getPlace().geometry.location.lng();\n\n    setCoordinates({ lat, lng });\n  };\n\n  return (\n    <Wrapper>\n      <Content>\n        <LogoImg src={TALogo} />\n        <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\n          <Search>\n            <h3>Explore new places</h3>\n            <div className=\"search-container\">\n              <img src={SearchIcon} alt=\"search icon\" className=\"search-icon\" />\n              <input type=\"text\" placeholder=\"Search...\" />\n            </div>\n          </Search>\n        </Autocomplete>\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-width: 430px;\n  color: var(--medGrey);\n  overflow: hidden;\n  box-shadow: 2px 0 5px 1px rgba(0, 0, 0, 0.3);\n  z-index: 100;\n  background-color: var(--clr-grey);\n`;\n\nexport const FormControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding-bottom: 1rem;\n  box-shadow: 0px 10px 5px -7px rgba(0, 0, 0, 0.3);\n  z-index: 10;\n  font-size: 0.9rem;\n\n  h1 {\n    font-size: clamp(1rem, 7vw, 1.4rem);\n    font-weight: 700;\n    text-align: center;\n    margin: 8px auto;\n  }\n\n  .form-container {\n    display: flex;\n    column-gap: 1.5rem;\n    justify-content: center;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    row-gap: 0.5rem;\n\n    select {\n      width: 150px;\n      cursor: pointer;\n      background-color: transparent;\n      font-size: 1rem;\n      border-radius: 4px;\n      padding: 2px 0.5rem 2px 0;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n  align-items: center;\n  row-gap: 2rem;\n  scroll-behavior: smooth;\n`;\n","import React from 'react';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faStar as fasStar,\n  faStarHalfAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\n\nconst Rating = ({ rating }) => {\n  let num = rating;\n  let stars = [];\n\n  for (let i = 0; i < 5; i++) {\n    if (num >= 1) {\n      stars.push(\n        <FontAwesomeIcon key={i} icon={fasStar} color=\"#fbbc05\" size=\"xs\" />\n      );\n    }\n    if (num > 0 && num < 1) {\n      stars.push(\n        <FontAwesomeIcon\n          key={i}\n          icon={faStarHalfAlt}\n          color=\"#fbbc05\"\n          size=\"xs\"\n        />\n      );\n    }\n    if (num <= 0) {\n      stars.push(\n        <FontAwesomeIcon key={i} icon={farStar} color=\"#fbbc05\" size=\"xs\" />\n      );\n    }\n    num -= 1;\n  }\n\n  return <div className=\"stars\">{stars}</div>;\n};\n\nexport default Rating;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  height: 1000px;\n  width: 95%;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  border-top: 1px solid lightgrey;\n  background-color: white;\n  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.3);\n\n  :hover {\n    background-color: rgba(254, 247, 225, 0.3);\n  }\n`;\n\nexport const Media = styled.div`\n  height: 225px;\n  width: 100%;\n  overflow: hidden;\n  background-image: url(${(props) => props.image});\n  background-repeat: no-repeat;\n  background-size: 100%, cover;\n  background-position: center center;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 10px 10px 15px;\n  width: 100%;\n  justify-content: flex-start;\n\n  h4 {\n    font-size: 1.2rem;\n  }\n\n  .details {\n    display: flex;\n    column-gap: 1rem;\n    padding-bottom: 12px;\n    align-items: center;\n\n    a {\n      text-decoration: none;\n      color: blue;\n      font-weight: 900;\n      font-size: 0.8rem;\n\n      :hover {\n        opacity: 0.7;\n      }\n    }\n\n    .ratings {\n      display: flex;\n      column-gap: 0.3em;\n    }\n\n    .stars {\n      position: relative;\n      bottom: 2px;\n    }\n  }\n\n  .details-awards {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .cuisines {\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 1rem;\n    justify-content: flex-start;\n    margin-top: 15px;\n  }\n  .cuisine {\n    background-color: lightgrey;\n    color: rgba(0, 0, 0, 0.6);\n    padding: 0.2em 0.5em;\n    border-radius: 10px;\n    margin: 5px 0;\n\n    p {\n      font-size: 0.8rem;\n    }\n  }\n`;\n","import React from 'react';\n\n// Components\nimport Rating from '../Rating';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhoneAlt, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\n// Styles\nimport { Card, Media, Content } from './PlaceDetails.styles';\n\nconst PlaceDetails = ({ place, id }) => {\n  const {\n    name,\n    address,\n    ranking,\n    photo,\n    price_level,\n    awards,\n    cuisine,\n    phone,\n    web_url,\n    website,\n    num_reviews,\n    rating,\n    business_listings,\n  } = place;\n\n  const hotel_url = business_listings?.mobile_contacts[0]?.value || undefined;\n\n  return (\n    <Card id={id}>\n      <Media image={photo?.images.medium.url} />\n      <Content>\n        <div className=\"details\">\n          <h4>{name}</h4>\n          <p>{price_level}</p>\n        </div>\n\n        <div className=\"details\">\n          <div className=\"ratings\">\n            <p>{rating}</p>\n            <Rating rating={rating} />\n            <p>({num_reviews})</p>\n          </div>\n        </div>\n\n        {phone && (\n          <div className=\"details\">\n            <FontAwesomeIcon icon={faPhoneAlt} />\n            <p>{phone}</p>\n          </div>\n        )}\n\n        {address && (\n          <div className=\"details\">\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\n            <p>{address?.split(',').splice(0, 2).join(', ')}</p>\n          </div>\n        )}\n        {(website || web_url || hotel_url) && (\n          <div className=\"details\">\n            <a\n              href={website ? website : hotel_url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              WEBSITE\n            </a>\n            {web_url && (\n              <a href={web_url} target=\"_blank\" rel=\"noreferrer\">\n                TRIPADVISOR\n              </a>\n            )}\n          </div>\n        )}\n        <div className=\"details\">\n          <p>{ranking}</p>\n        </div>\n        <div className=\"details-awards\">\n          {awards?.map((award, i) => {\n            return (\n              <div className=\"details\" key={i} style={{ paddingBottom: 2 }}>\n                <img src={award?.images?.small} alt=\"award\" />\n                <p>{award?.display_name}</p>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"cuisines\">\n          {cuisine?.map((type) => (\n            <div className=\"cuisine\" key={type.key}>\n              <p>{type.name}</p>\n            </div>\n          ))}\n        </div>\n      </Content>\n    </Card>\n  );\n};\n\nexport default PlaceDetails;\n","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\n// Styles\nimport { Wrapper, FormControl, Content } from './List.styles';\n\n// Components\nimport PlaceDetails from '../PlaceDetails';\nimport Spinner from '../Spinner';\n\nconst List = ({ places, isLoading, type, setType, rating, setRating }) => {\n  return (\n    <Wrapper>\n      <FormControl>\n        <h1>Restaurants, Hotels & Attractions</h1>\n        <div className=\"form-container\">\n          <form>\n            <label htmlFor=\"type\">Select a type</label>\n            <select\n              value={type}\n              onChange={(e) => setType(e.target.value)}\n              name=\"type\"\n            >\n              <option value=\"restaurants\">Restaurants</option>\n              <option value=\"hotels\">Hotels</option>\n              <option value=\"attractions\">Attractions</option>\n            </select>\n          </form>\n\n          <form>\n            <label htmlFor=\"rating\">Filter by ratings</label>\n            <select\n              value={rating}\n              onChange={(e) => setRating(e.target.value)}\n              name=\"type\"\n            >\n              <option value=\"0\">All</option>\n              <option value=\"3\">Above 3.0 </option>\n              <option value=\"4\">Above 4.0</option>\n              <option value=\"4.5\">Above 4.5</option>\n            </select>\n          </form>\n        </div>\n      </FormControl>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <Content>\n          {places?.map((place, i) => (\n            <PlaceDetails id={i} key={i} place={place} />\n          ))}\n        </Content>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Preview = styled.div`\n  position: relative;\n  background-color: white;\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5px;\n  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.3);\n  transition: ease 0.3s all;\n\n  :hover {\n    z-index: 100;\n    transform: scale(1.05);\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  p {\n    font-size: 0.8rem;\n    text-align: center;\n    color: black;\n  }\n\n  .img-wrapper {\n    width: 95%;\n    height: 100%;\n    max-height: 80px;\n    overflow: hidden;\n    margin: 2px;\n  }\n\n  img {\n    width: 100%;\n  }\n\n  .stars {\n    display: flex;\n    justify-content: center;\n  }\n`;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\n\n//styles\nimport { Wrapper, Preview } from './Map.styles';\n\n// Components\nimport Rating from '../Rating';\n\nconst Map = ({ setCoordinates, setBounds, coordinates, places }) => {\n  const defaultCenter = { lat: 40.73061, lng: -73.935242 };\n\n  return (\n    <Wrapper>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLEAPI_KEY }}\n        defaultCenter={defaultCenter}\n        center={coordinates}\n        defaultZoom={14}\n        margin={[50, 50, 50, 50]}\n        options={''}\n        onChange={(e) => {\n          setCoordinates({ lat: e.center.lat, lng: e.center.lng });\n          setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n        }}\n        onChildClick={''}\n      >\n        {places?.map((place, i) => {\n          const { longitude, latitude, name, rating, photo } = place;\n          return (\n            <Preview lat={latitude} lng={longitude}>\n              <a href={`#${i}`}>\n                <p>{name}</p>\n                <div className=\"img-wrapper\">\n                  <img src={photo?.images.medium.url} alt={name} />\n                </div>\n                <Rating rating={rating} />\n              </a>\n            </Preview>\n          );\n        })}\n      </GoogleMapReact>\n    </Wrapper>\n  );\n};\n\nexport default Map;\n","import React, { useEffect, useState } from 'react';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\n// API\nimport API from './API';\n\n// Components\nimport Grid from './components/Grid';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Map from './components/Map';\n\nconst App = () => {\n  const [places, setPlaces] = useState([]);\n  const [coordinates, setCoordinates] = useState();\n  const [bounds, setBounds] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [type, setType] = useState('restaurants');\n  const [rating, setRating] = useState(0);\n  const [filteredPlaces, setFilteredPlaces] = useState([]);\n\n  // Get current position and save to state\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates({ lat: latitude, lng: longitude });\n      }\n    );\n  }, []);\n\n  // Filter places by rating\n  useEffect(() => {\n    const filtered = places.filter((place) => place.rating > rating);\n    setFilteredPlaces(filtered);\n  }, [rating]);\n\n  // Get data when type, or bounds change\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getPlaces = async () => {\n      await API.getPlacesData(type, bounds.sw, bounds.ne).then((data) => {\n        setPlaces(\n          data?.filter((place) => place.name && Number(place.num_reviews) > 0)\n        );\n\n        setFilteredPlaces([]);\n        setIsLoading(false);\n      });\n    };\n\n    if (bounds && coordinates) {\n      getPlaces();\n    }\n  }, [bounds, type]);\n\n  return (\n    <>\n      <Header setCoordinates={setCoordinates} />\n      <Grid>\n        <List\n          places={filteredPlaces.length ? filteredPlaces : places}\n          isLoading={isLoading}\n          type={type}\n          setType={setType}\n          rating={rating}\n          setRating={setRating}\n        />\n        <Map\n          setCoordinates={setCoordinates}\n          setBounds={setBounds}\n          coordinates={coordinates}\n          places={filteredPlaces.length ? filteredPlaces : places}\n        />\n      </Grid>\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}